[{"D:\\react\\navbar\\src\\index.js":"1","D:\\react\\navbar\\src\\reportWebVitals.js":"2","D:\\react\\navbar\\src\\App.js":"3","D:\\react\\navbar\\src\\Navbar.js":"4","D:\\react\\navbar\\src\\NavData.js":"5","D:\\react\\navbar\\src\\FontAwesome\\Fontawesome.js":"6","D:\\react\\navbar\\src\\Sidebar\\Sidebar.js":"7","D:\\react\\navbar\\src\\Sidebar\\SidebarData.js":"8","D:\\react\\navbar\\src\\Modal\\Modal.js":"9","D:\\react\\navbar\\src\\Modal\\Contaxt.js":"10"},{"size":305,"mtime":1610866521770,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":309,"mtime":1610859930535,"results":"14","hashOfConfig":"12"},{"size":1998,"mtime":1610863514664,"results":"15","hashOfConfig":"12"},{"size":492,"mtime":1610822204079,"results":"16","hashOfConfig":"12"},{"size":147,"mtime":1610782647447,"results":"17","hashOfConfig":"12"},{"size":772,"mtime":1610827451408,"results":"18","hashOfConfig":"12"},{"size":669,"mtime":1610826473999,"results":"19","hashOfConfig":"12"},{"size":438,"mtime":1610868410835,"results":"20","hashOfConfig":"12"},{"size":331,"mtime":1610868188736,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1thvjzj",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\react\\navbar\\src\\index.js",[],["46","47"],"D:\\react\\navbar\\src\\reportWebVitals.js",[],["48","49"],"D:\\react\\navbar\\src\\App.js",[],"D:\\react\\navbar\\src\\Navbar.js",["50"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { NavData, Social } from \"./NavData\";\r\nimport \"./FontAwesome/Fontawesome\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Navbar = () => {\r\n  const [showLinks, SetshowLinks] = useState(false);\r\n  const navContainer = useRef(null);\r\n  const socialicon = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const element = navContainer.current;\r\n    const icon = socialicon.current;\r\n    console.log(element);\r\n    if (showLinks) {\r\n      element.style.display = \"inline\";\r\n      icon.style.display = \"inline\";\r\n    } else {\r\n      element.style.display = \"none\";\r\n      icon.style.display = \"none\";\r\n    }\r\n  }, [showLinks]);\r\n\r\n  return (\r\n    <div className=\"header-container\">\r\n      <div className=\"nav-header\">\r\n        <img src=\"hdrlogo.svg\" alt=\"pixa\" className=\"header-logo\" />\r\n\r\n        <div ref={navContainer}>\r\n          <ul className=\"link-container\">\r\n            {NavData.map((data) => {\r\n              const { id, title, url } = data;\r\n              return (\r\n                <li key={id}>\r\n                  <a style={{ textDecoration: \"none\" }} href={url}>\r\n                    {title}\r\n                  </a>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"icon-container\" ref={socialicon}>\r\n          <ul>\r\n            {Social.map((logo) => {\r\n              const { id, url, imge } = logo;\r\n              return (\r\n                <li key={id}>\r\n                  <a href={url}>\r\n                    <img src={imge} />\r\n                  </a>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n\r\n        <FontAwesomeIcon\r\n          className=\"nav-toggle\"\r\n          onClick={() => SetshowLinks(!showLinks)}\r\n          color=\"red\"\r\n          icon=\"bars\"\r\n          style={{ height: \"50px\", width: \"50px\" }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","D:\\react\\navbar\\src\\NavData.js",[],"D:\\react\\navbar\\src\\FontAwesome\\Fontawesome.js",[],"D:\\react\\navbar\\src\\Sidebar\\Sidebar.js",[],"D:\\react\\navbar\\src\\Sidebar\\SidebarData.js",[],"D:\\react\\navbar\\src\\Modal\\Modal.js",["51","52"],"import React, { useContext } from \"react\";\r\nimport \"../Modal/modal.css\";\r\nimport { AppContext, useGlobalContext } from \"./Contaxt\";\r\n\r\nconst Modal = () => {\r\n  // const data = useContext(AppContext);\r\n  const data = useGlobalContext();\r\n  console.log(data);\r\n  return (\r\n    <div className=\"modal-container\">\r\n      <div className=\"modal-div\">\r\n        <button>Modal</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","D:\\react\\navbar\\src\\Modal\\Contaxt.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"53","replacedBy":"57"},{"ruleId":"55","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":51,"column":21,"nodeType":"61","endLine":51,"endColumn":39},{"ruleId":"62","severity":1,"message":"63","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":27},{"ruleId":"62","severity":1,"message":"66","line":3,"column":10,"nodeType":"64","messageId":"65","endLine":3,"endColumn":20},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],["67"],["68"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'AppContext' is defined but never used.","no-global-assign","no-unsafe-negation"]